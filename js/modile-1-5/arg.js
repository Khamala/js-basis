//                       РЕПЕТА Модуль 2, занятие 4 ФУНКЦИИ.
//                       ПСЕВДОМАССИВ arguments

// Задачи, где нужно написать функцию, но не известно заранее количество аргументов.
// Но разное количество аргументов объявить нельзя, можно только передать.
// Для этого есть такая встроенная локальная переменная arguments
// (ее не надо объявлять, она просто есть, как ключевое слово).
// Глобальный тип, на котором создаются все массивы - конструктор Array, у него есть метод from

/*
const fn = function () {
    // встроенная локальная переменная arguments
    // Для преобразования в настоящий массив:
    const args = Array.from(arguments);
};
fn(1, 2, 3);
fn(1, 2, 3, 4, 5);
fn(1, 2, 3, 4, 5, 6, 7);
*/

/*
    // Современный синтаксис - это операция ...rest, т.е. остаток
const fn = function (...args) {
    // Создает массив 
    // (a, b, ...args)
};
fn(1, 2, 3);
fn(1, 2, 3, 4, 5);
fn(1, 2, 3, 4, 5, 6, 7);
*/



/*
Напиши функцию filerNumbers (array [, number1, ...]), которая
- первым аргументом принимает массив чисел,
- после первого аргумента возможно произвольное количество других аргументов, которые будут числами
- Функция должна вернуть новый массив, в котором будут только те аргументы, начиная со второго, 
для которых есть аналог в оригинальном массиве.


const filerNumbers = function (arrNumbers, ...numbers) {
    let newArr = [];

    for (let i = 0; i < numbers.length; i += 1){
        if (arrNumbers.includes(numbers[i])) {
            newArr.push(numbers[i]);
        };
    };

    return newArr;
};

console.log(filerNumbers([1, 2, 3, 4, 5], 10, 15, 2, 3, 8));
console.log(filerNumbers([10, 15, 25, 30], 23, 30, 18, 15));
console.log(filerNumbers([100, 200, 300, 400, 500], 7, 12, 200, 64, 5, 87, 95, 88, 82));
*/